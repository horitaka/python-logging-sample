@startuml
participant lambda_handler as handler
participant app as app
participant module1 as module1
participant module2 as module2
participant events as events
participant custom_logger as custom_logger

participant logging as logging

handler -> app: call api
activate app

  app -> app: contextからipアドレスなど取得

  app -> custom_logger: get_instance()
  activate custom_logger
  return custom_logger

  app -> custom_logger: init_logger(context)\ncontextの保存,formatter, handlerの設定
  activate custom_logger
  return

  app -> module1: _init_
  activate module1
    module1 -> custom_logger: get_logger(name)
      activate custom_logger
        custom_logger -> logging: get_logger(name)
        activate logging
        return logger
        custom_logger -> custom_logger: filterの設定
      return logger
      module1 -> module1: self.logger = logger
    return

  app -> module1: some_method
    activate module1
    module1 -> module1: logの出力
  return



@enduml