@startuml
participant lambda_handler as handler
participant app as app
participant module1 as module1
participant module2 as module2
participant events as events
participant custom_logger as custom_logger

participant logging as logging

handler -> app: call api
activate app

  app -> custom_logger: _init_(context)\ncontextの保存,formatter, handlerの設定
  activate custom_logger
  return

  app -> module1: _init_
  activate module1
    module1 -> custom_logger: get_logger(name)
      activate custom_logger
        custom_logger -> logging: get_logger(name)
        activate logging
        return logger
      return logger
      module1 -> module1: self.logger = logger
    return

  app -> module1: some_method
    activate module1
    module1 -> module1: logの出力
  return


  app -> module2: 何らかの処理
  activate module2
    module2 -> module2: loggerの取得、logの出力
  return

@enduml